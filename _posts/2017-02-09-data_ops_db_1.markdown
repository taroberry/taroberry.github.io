---
layout: post
title:  mysql在BI系统的科学用法
category: data_ops
description: mysql是互联网公司主流的关系型数据库，BI系统也不例外，很多公司都使用mysql存储统计类数据。但是，天生娇贵的mysql需要扬长避短，科学使用。
---

报表数据的存储，有很多种选择，除了最常见的关系型数据库，es、hbase等其他存储方式也有成功案例。在关系型数据库里，互联网公司用的最多的就是mysql。

### 统计业务的使用场景
* 存在复杂查询，count、sum等聚合查询很常见
* ETL时存在大批量的读写操作

### 为什么用mysql
对于报表类业务，mysql的优点：

* 随便找个程序员都能上手
* 和web应用集成很方便
* 合理使用时，查询响应很快

mysql的缺点

* 扩展不方便，业务量大了以后不能随便加机器
* 条件灵活的查询和筛选难以支持，比如多个筛选条件组合的查询

### 复杂sql
对于一般的业务系统，近年来微服务架构盛行，数据库承担了更多存储的角色，把业务逻辑推向了应用服务这一层，sql更多的是执行简单的增删改查操作，很多公司甚至都禁止使用join查询。于是，一般业务系统里的sql就变得异常简单高效，这也很符合OLTP的理念，每次查询只扫描很少量的数据文件，返回很小的数据集。

而对于统计业务，sum、count等聚合操作是家常便饭，秒级甚至十秒级的查询都很常见，是属于OLAP类查询。关于OLTP和OLAP的区别，网上资料很多，这里就不赘述了。OLAP类查询会扫描大量数据文件，消耗大量的磁盘IO资源，聚合计算也会消耗大量CPU资源，总之系统容易被报表的复杂查询拖垮，所以要保证统计业务的mysql独立部署。

独立部署后，虽然不影响其他业务，但是统计业务内部业务量大了以后，不同查询间也会相互影响。有赞最早就只有用于统计业务的mysql，结果出现过内部报表系统的复杂查询，引起了线上用户侧报表挂了。后面就做了线上报表和公司内部报表分离。

### 实时统计
实时业务会有频繁的写操作，大部分时候是不会选择mysql的，但对于一些业务量小、准确性要求高的业务，mysql也是不错的选择。实时统计不同于传统的离线统计，更像是用数据的视角重放了一遍业务，更多时候是属于OLTP类型操作，所以也尽量要做到实时库和离线库分离。

### BI系统与业务系统的耦合
软件系统提倡松耦合，统计业务或者BI系统天然有松耦合的关系。

在ETL时，BI系统会从业务数据库里大批量读取数据，可能会拖慢业务库。统计结果批量写入mysql，写的太快也会引起服务器io使用率过高。低并发、小批量、多批次是比较安全的做法，比如就起两个线程，每次取1000条，反复去查询获取。如果单线程操作都引起io使用率过高，可以考虑没执行一次操作，sleep一下。

在报表读取时，也可能去业务数据库读取一些信息，比如一个商品销量报表，可能在统计库里只记录了商品id，没记录商品的标题和url，这时就需要从业务库去获取。这里也要做一次技术和业务的平衡，在业务上决定了是否一定要冗余数据，比如查询一个月前的商品报表，显示的是当前商品标题，还是一个月前的标题。当然技术上也需要考虑，统计表冗余存储商品标题，让报表展示变得简单，但是如果要节省存储空间，就可能只存商品id，商品标题去业务库获取。实际的项目中，未存储商品标题和url的统计表的空间，是存储了冗余信息的统计表的存储空间的30%，因为标题、url这些字符串比统计结果的int要占更多空间。

### 业务与技术间的平衡
mysql有不易扩展的缺点，一旦计算或者存储资源不够，很难通过加机器解决问题。

如果存储空间不够了，可以选择拆库，也可以换其他的存储，但这两个方案的开发代价都比较大，而最简单的做法就是删数据，可能代码都不用改。这就牵涉到业务的妥协，比如一年之内可以查天级别粒度报表，一年以前只能查月级别粒度报表，这样就可以较好控制数据库空间增长速度。

如果存在复杂的查询，一旦有多个用户同时使用，CPU或者磁盘IO方面的性能可能会跟不上。对于可能出现用户并发使用的场景，就要尽量避免复杂的查询，除了技术上的优化，业务上或许可以舍弃一些用户不需要的灵活性，比如很多报表产品不支持任意时间区间的筛选，只保留了固定周期的周报、月报，这就让查询模式变得固定和简单，减轻数据库压力。

### 不单单只有mysql
有些业务场景，可以考虑其他工具，比如数据分析用hive/spark、olap用kylin、搜索用es、mysql更适合web下的交互式查询。当然，需要响应时间要求非常高的，可以考虑redis这样的基于内存的存储。

### 小结
统计业务使用mysql，需要注意这么一些

* 统计mysql和业务mysql分别部署
* 线上统计mysql和公司内部统计mysql分别部署
* 用于实时统计的mysql和离线统计mysql要独立部署
* ETL时要做到低并发、小批量、多批次，可以考虑适当的sleep
* 如果单机快搞不定了，业务上要舍弃伪需求，比如只能查某个时间段内的报表
* 把mysql只用户交互式查询场景，不要把mysql当做数据分析工具和搜索引擎

